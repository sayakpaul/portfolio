---
title: Authoring
aliases: 
  - /authoring
toc: false
---
Authored the following liveProjects with [Manning](https://www.manning.com/):  

* [Use Machine Learning to Detect Phishing Websites](https://www.manning.com/liveproject/use-machine-learning-to-detect-phishing-websites?a_aid=pyimagesearch&a_bid=643ce05e) 
* [Summarize News Articles with NLP and TensorFlow](https://www.manning.com/liveproject/summarize-news-articles-with-nlp-and-tensorflow?a_aid=pyimagesearch&a_bid=643ce05e) (with [Souradip Chakraborty](https://www.linkedin.com/in/souradip-chakraborty/)) 

Below are the blogs, articles, and tutorials I have written on Data Science, Machine Learning, and more. I am fortunate enough 
to collaborate with  amazing folks from all around the globe. I am grateful to the [GDE Program](https://developers.google.com/programs/experts/)
(ML Developer Programs team) that provides me with Google Cloud Platform credits which I use to run various experiments for my own curiosity
and for blog posts.

### [Keras](https://keras.io/)

-   [MixUp augmentation for image classification](https://keras.io/examples/vision/mixup/) 
-   [RandAugment for Image Classification for Improved Robustness](https://keras.io/examples/vision/randaugment/) 
-   [Self-supervised contrastive learning with SimSiam](https://keras.io/examples/vision/simsiam)
-   [Consistency Training with Supervision](https://keras.io/examples/vision/consistency_training/)
-   [Learning to Resize in Computer Vision](https://keras.io/examples/vision/learnable_resizer/)
-   [Keypoint Detection with Transfer Learning](https://keras.io/examples/vision/keypoint_detection/)
-   [Video Classification with a CNN-RNN Architecture](https://keras.io/examples/vision/video_classification/)
-   [Video Classification with Transformers](https://keras.io/examples/vision/video_transformers/)
-   [Semi-supervision and domain adaptation with AdaMatch](https://keras.io/examples/vision/adamatch/)
-   [Compact Convolutional Transformers](https://keras.io/examples/vision/cct/)
-   [Conditional GAN](https://keras.io/examples/generative/conditional_gan/)
-   [Vector-Quantized Variational Autoencoders](https://keras.io/examples/generative/vq_vae/)
-   [Knowledge distillation recipes](https://keras.io/examples/keras_recipes/better_knowledge_distillation/) [^1]
-   [Multimodal entailment](https://keras.io/examples/nlp/multimodal_entailment/)
-   [Handwriting recognition](https://keras.io/examples/vision/handwriting_recognition/) (joint work with [Aakash Kumar Nain](https://twitter.com/A_K_Nain))
-   [Near-duplicate image search](https://keras.io/examples/vision/near_dup_search/)
-   [Large-scale multi-label text classification](https://keras.io/examples/nlp/multi_label_classification/) (joint work with [Soumik Rakshit](https://github.com/soumik12345))
-   [FixRes: Fixing train-test resolution discrepancy](https://keras.io/examples/vision/fixres/)
-   [Image classification with ConvMixer](https://keras.io/examples/vision/convmixer/)
-   [MobileViT: A mobile-friendly Transformer-based model for image classification](https://keras.io/examples/vision/mobilevit/)
-   [Point cloud segmentation with PointNet](https://keras.io/examples/vision/pointnet_segmentation/) (joint work with [Soumik Rakshit](https://github.com/soumik12345)) [^2]
-   [Masked image modeling with Autoencoders](https://keras.io/examples/vision/masked_image_modeling/) (joint work with [Aritra Roy Gosthipaty](https://twitter.com/arig23498))
-   [Learning to tokenize in Vision Transformers](https://keras.io/examples/vision/token_learner/) (joint work with [Aritra Roy Gosthipaty](https://twitter.com/arig23498))
-   [GauGAN for conditional image generation](https://keras.io/examples/generative/gaugan/) (joint work with [Soumik Rakshit](https://github.com/soumik12345))
-   [Distilling Vision Transformers](https://keras.io/examples/vision/deit/) [^3]
-   [Investigating Vision Transformer representations](https://keras.io/examples/vision/probing_vits/) (joint work with [Aritra Roy Gosthipaty](https://twitter.com/arig23498)) [^4]
-   [Class Attention Image Transformers with LayerScale](https://keras.io/examples/vision/cait/)
-   [Fine-tuning Stable Diffusion](https://keras.io/examples/generative/finetune_stable_diffusion/) (joint work with [Chansung Park](https://github.com/deep-diver))
-   [Semantic segmentation with SegFormer and Hugging Face Transformers](https://keras.io/examples/vision/segformer/)
-   [DreamBooth](https://keras.io/examples/generative/dreambooth/) (joint work with [Chansung Park](https://github.com/deep-diver))
-   [Training a language model from scratch with 🤗 Transformers and TPUs](https://keras.io/examples/nlp/mlm_training_tpus/) (joint work with [Matthew Carrigan](https://twitter.com/carrigmat))
-   [Segment Anything Model with 🤗 Transformers](https://keras.io/examples/vision/sam/) (joint work with [Merve Noyan](https://twitter.com/mervenoyann))

### [Datacamp](https://www.datacamp.com/)

-   [KMeans clustering with `scikit-learn`](https://goo.gl/dT7kYq) 
-   [Demystifying Crucial Statistics in Python](https://goo.gl/i2Wm5v) [^5]
-   [Turning Machine Learning Models into APIs in Python](https://goo.gl/vwzqtA) [^6]
-   [Essentials of Linear Regression in Python](https://goo.gl/5nuVmt) [^7]
-   [Simplifying Sentiment Analysis in Python](https://goo.gl/62mEJo)
-   [Introduction to Indexing in SQL](https://goo.gl/7dcnE7) 
-   [Understanding Recursive Functions in Python](https://goo.gl/u1U2eH) 
-   [Beginner's Guide to Google's Vision API in Pytho](https://goo.gl/VCwZa8) 
-   [Beginner's Guide to PostgreSQL](https://goo.gl/DV1rhY)
-   [Managing Databases in PostgreSQL](https://goo.gl/YA9fAy)
-   [Working with Spreadsheets in SQL](https://goo.gl/PYUb2v)
-   [Installing PostgreSQL on Windows and Mac OS X](https://goo.gl/CyF8T4)
-   [Using Order By Keyword in SQL](https://goo.gl/i7mD8f)
-   [Introduction to Alter Table Statement in SQL](https://goo.gl/qWi3km)
-   [SQLite in Python](https://goo.gl/wYCr4e)
-   [Introduction to Where Clause in SQL](https://goo.gl/VB3CdX)
-   [Introduction to SQL Joins](https://goo.gl/2w342W)
-   [10 command-line utilities in PostgreSQL](https://goo.gl/xFWbRS)
-   [CASE Statements in PostgreSQL](https://bit.ly/2HWBSwu)
-   [Cleaning Data in SQL](http://bit.ly/2GyPdrL)
-   [Materialized Views in PostgreSQL](http://bit.ly/2VFz11x)
-   [Argument Parsing in Python](http://bit.ly/2LOWGsJ)
-   [Ten Important Updates from TensorFlow 2.0](http://bit.ly/2EHENWL)
-   [Implementing Neural Style Transfer using TensorFlow 2.0](http://bit.ly/2J1mmxv)
-   [TensorFlow 2.0 Case Study](http://bit.ly/2U0yjZA)

[^1]:#TFCommunitySpotlight [awarded](https://twitter.com/TensorFlow/status/1428433434972618754).
[^2]:#TFCommunitySpotlight [awarded](https://twitter.com/TensorFlow/status/1460321709488152579).
[^3]:#TFCommunitySpotlight [awarded](https://twitter.com/TensorFlow/status/1516869315517198337).
[^4]:#TFCommunitySpotlight [awarded](https://twitter.com/TensorFlow/status/1521558632768409600).
[^5]:This article got featured in "[Python Top 10 Articles for the Past Month (v.Oct 2018)](https://medium.mybridge.co/python-top-10-articles-for-the-past-month-v-oct-2018-81a2f7658945?gi=772a9da0d618)" and secured a rank of 4.
[^6]:This article got featured in "[Machine Learning Top 10 Articles for the Past Month (v.Nov 2018)](https://medium.mybridge.co/machine-learning-top-10-articles-for-the-past-month-v-nov-2018-35f1fd88cb49)" and secured a rank of 9.
[^7]:This article got featured in "[Python Top 10 Articles for the Past Month (v.Dec 2018)](https://medium.mybridge.co/python-top-10-articles-for-the-past-month-v-dec-2018-6c4c7a10b61e)" and secured a rank of 10.

### [FloydHub](https://www.floydhub.com/)

-   [Introduction to Anomaly Detection in Python](https://floydhub.ghost.io/introduction-to-anomaly-detection-in-python/)
-   [Introduction to K-Means Clustering in Python with `scikit-learn`](https://floydhub.ghost.io/introduction-to-k-means-clustering-in-python-with-scikit-learn/)
-   [An introduction to Q-Learning: Reinforcement Learning](https://floydhub.ghost.io/an-introduction-to-q-learning-reinforcement-learning/)
-   [How to plan and execute your ML and DL projects](https://floydhub.ghost.io/structuring-and-planning-your-machine-learning-project/)
-   [Becoming One With the Data](https://floydhub.ghost.io/becoming-one-with-the-data/) [^8]
-   [Training Neural Nets: a Hacker’s Perspective](https://floydhub.ghost.io/training-neural-nets-a-hackers-perspective/)

[^8]:Featured in  [Sebastian Ruder](http://www.google.com/url?q=http%3A%2F%2Fruder.io%2F&sa=D&sntz=1&usg=AFQjCNFQ0bOiqC7-bafcYwaCLKmMXkBnmA)'s [monthly newsletter](http://www.google.com/url?q=http%3A%2F%2Fnewsletter.ruder.io%2Fissues%2Fbigger-vs-smaller-models-powerful-vs-dumb-models-190768&sa=D&sntz=1&usg=AFQjCNGAAnCn_dxXbyQ-3Rb1r5XcXOVdOQ).

### [Weights and Biases](https://www.wandb.com/)

-   [Running Hyperparameter Sweeps to Pick the Best Model](http://bit.ly/2MKHR7K)
-   [arXiv Search: Generating Tags from Paper Titles](http://bit.ly/2WQ8sFh)
-   [How to Use GCP with Weights & Biases](http://bit.ly/399Fd60)
-   [Mixed precision training with `tf.keras`](http://bit.ly/2RIkQ9z)
-   [Customizing Training Loops in TensorFlow 2.0](http://bit.ly/39DOmEf)
-   [Bayesian Hyperparameter Optimization - A Primer](http://bit.ly/38SqXgR)
-   [Visualize models in TensorBoard with Weights and Biases](http://bit.ly/3cCP5qq)
-   [The effects of weight initialization on neural nets](https://bit.ly/3bk34Qu)
-   [Introduction to image inpainting with deep learning](https://bit.ly/39CqTBK) (joint work with [Ayush Thakur](https://www.google.com/url?q=https%3A%2F%2Ftwitter.com%2Fayushthakur0&sa=D&sntz=1&usg=AFQjCNHhWFJzSWoahTWqv8gnUSTAO1uU9w))
-   [Reproducible Models with W&B](https://bit.ly/34V5ZNz)
-   [EvoNorm layers in TensorFlow 2](https://bit.ly/3arUw9q)
-   [A Tale of Model Quantization in TF Lite](https://bit.ly/3dlCRSI)
-   [Towards self-supervised image understanding with SimCLR](https://bit.ly/2LHq6WR)
-   [The Power of Random Features of a CNN](https://bit.ly/2XKv76A)
-   [Plotting top loss images while training models](https://bit.ly/30Xzs9E) (joint work with [Tulasi](https://www.linkedin.com/in/tulasi-ram-laghumavarapu-aba672103/))
-   [Improving Image Classifiers with Supervised Contrastive Learning](https://bit.ly/2UVZtm7) (joint work with [Sweta Shaw](https://www.linkedin.com/in/sweta-shaw-797540159/))
-   [Model Pruning in Deep Learning](https://bit.ly/2AJ67W4) 
-   [Understanding the Effectivity of Ensembles in Deep Learning](https://bit.ly/deep-ensembles) (joint work with [Ayush Thakur](https://twitter.com/ayushthakur0))
-   [An Introduction to Adversarial Examples in Deep Learning](https://bit.ly/3b2zss2) [^9]
-   [Unsupervised Visual Representation Learning with SwAV](http://bit.ly/swav-tf) (joint work with [Ayush Thakur](https://twitter.com/ayushthakur0))
-   [Distilling Knowledge in Neural Networks](https://bit.ly/3mvsbGn)
-   [Keras XLA Benchmarks](http://wandb.me/keras-xla-benchmark) (in collaboration with [Soumik Rakshit](https://in.linkedin.com/in/soumikrakshit) and [Ayush Thakur](https://in.linkedin.com/in/ayush-thakur-731914149))

[^9]:This one ranked eighth at a [blogging competition](https://drive.google.com/file/d/11j3gJSaaCtu-Gq4ziKbG0RMBvXecha45/view?usp=sharing).

### [Google Cloud Platform](https://cloud.google.com/blog)

- [Streamline your ML training workflow with Vertex AI](https://cloud.google.com/blog/topics/developers-practitioners/streamline-your-ml-training-workflow-vertex-ai) (joint work with [Karl Weinmeister](https://twitter.com/kweinmeister) of Google)
-   [Image search with natural language queries](https://cloud.google.com/blog/topics/developers-practitioners/image-search-natural-language-queries) (joint work with [Chansung Park](https://github.com/deep-diver))
-   [Dual deployments on Vertex AI](https://cloud.google.com/blog/topics/developers-practitioners/dual-deployments-vertex-ai) (joint work with [Chansung Park](https://github.com/deep-diver)) [^10]
-   Model training as a CI/CD system - [Part I](https://cloud.google.com/blog/topics/developers-practitioners/model-training-cicd-system-part-i), [Part II](https://cloud.google.com/blog/topics/developers-practitioners/model-training-cicd-system-part-ii) (joint work with [Chansung Park](https://github.com/deep-diver))

### TensorFlow

-   [How to Create a Cartoonizer with TensorFlow Lite](http://bit.ly/cartoonizer-app) (joint work with [Margaret Maynard-Reid](https://twitter.com/margaretmz))
-   [TensorFlow Addons Optimizers: CyclicalLearningRate](https://www.tensorflow.org/addons/tutorials/optimizers_cyclicallearningrate)
-   [Graph regularization for image classification using synthesized graphs](https://github.com/tensorflow/neural-structured-learning/blob/master/neural_structured_learning/examples/notebooks/graph_keras_cnn_flowers.ipynb) [^11]
-   [Continuous Adaptation for Machine Learning System to Data Changes](https://blog.tensorflow.org/2021/12/continuous-adaptation-for-machine.html) (joint work with [Chansung Park](https://github.com/deep-diver)) [^12]
-   [Load-testing TensorFlow Serving’s REST Interface](https://blog.tensorflow.org/2022/07/load-testing-TensorFlow-Servings-REST-interface.html) (joint work with [Chansung Park](https://github.com/deep-diver))
-   [Automated Deployment of TensorFlow Models with TensorFlow Serving and GitHub Actions](https://blog.tensorflow.org/2022/09/automated-deployment-of-tensorflow-models-with-tensorflow-serving-and-github-actions.html) (joint work with [Chansung Park](https://github.com/deep-diver)) 
-   [End-to-End Pipeline for Segmentation with TFX, Google Cloud, and Hugging Face](https://blog.tensorflow.org/2023/01/end-to-end-pipeline-for-segmentation-tfx-google-cloud-hugging-face.html) (joint work with [Chansung Park](https://github.com/deep-diver)) [^13]
-   [Serving With TF and GKE: Stable Diffusion](https://blog.tensorflow.org/2023/04/serving-with-tf-and-gke-stable-diffusion.html) (joint work with [Chansung Park](https://github.com/deep-diver))

### Hugging Face 🤗

**Series on the deployment of TF vision models in 🤗**

- [Deploying TensorFlow Vision Models in Hugging Face with TF Serving](https://huggingface.co/blog/tf-serving-vision)
- [Deploying 🤗 ViT on Kubernetes with TF Serving](https://huggingface.co/blog/deploy-tfserving-kubernetes) (with [Chansung Park](https://github.com/deep-diver))
- [Deploying 🤗 ViT on Vertex AI](https://huggingface.co/blog/deploy-vertex-ai) (with [Chansung Park](https://github.com/deep-diver))

**Series on Diffusers x quantization**

- [Memory-efficient Diffusion Transformers with Quanto and Diffusers](https://huggingface.co/blog/quanto-diffusers)
- [In our previous post, Exploring Quantization Backends in Diffusers](https://huggingface.co/blog/diffusers-quantization)
- [(LoRA) Fine-Tuning FLUX.1-dev on Consumer Hardware](https://huggingface.co/blog/flux-qlora)

**Blogs**

You can check out the article I have written or co-written on the hf.co/blog platform by visiting
[this link](https://huggingface.co/sayakpaul/activity/articles). Below are some of my favorite ones:

- [The State of Computer Vision at Hugging Face 🤗](https://huggingface.co/blog/cv_state)
- [A Dive into Vision-Language Models](https://huggingface.co/blog/vision_language_pretraining) (with [Alara Dirik](https://huggingface.co/adirik))
- [🤗 PEFT: Parameter-Efficient Fine-Tuning of Billion-Scale Models on Low-Resource Hardware](https://huggingface.co/blog/peft) (with [Sourab Mangrulkar](https://twitter.com/sourab_m))
- [Instruction-tuning Stable Diffusion with InstructPix2Pix](https://huggingface.co/blog/instruction-tuning-sd)
- [Personal Copilot: Train Your Own Coding Assistant](https://huggingface.co/blog/personal-copilot) (with [Sourab Mangrulkar](https://twitter.com/sourab_m))
- [🤗 PEFT welcomes new merging methods](https://huggingface.co/blog/peft_merging) (with [Sourab Mangrulkar](https://twitter.com/sourab_m?lang=en)).
- [State of open video generation models in Diffusers](https://huggingface.co/blog/video_gen) (with [Aryan](https://huggingface.co/a-r-r-o-w) and [Dhruv](https://huggingface.co/dn6))
- [Build awesome datasets for video generation](https://huggingface.co/blog/vid_ds_scripts) (with [hlky](https://huggingface.co/hlky))

Apart from these, I contribute to numerous documentation-related efforts, and they can be found by visiting these links: [link 1](https://github.com/huggingface/diffusers/commits?author=sayakpaul), [link 2](https://github.com/huggingface/notebooks/commits?author=sayakpaul).

Blog posts outside the Hugging Face blogging platform:

* [Controlling Stable Diffusion with JAX, diffusers, and Cloud TPUs](https://opensource.googleblog.com/2023/06/controlling-stable-diffusion-with-jax-diffusers-and-cloud-tpus.html) (with Merve Noyan)
* [Accelerating Generative AI Part III: Diffusion, Fast](https://pytorch.org/blog/accelerating-generative-ai-3/) (with [Patrick von Platen](https://fr.linkedin.com/in/patrick-von-platen-343401123)). [Tweet](https://x.com/PyTorch/status/1742647700183458156?s=20) from PyTorch.
* [Presenting Flux Fast: Making Flux go brrr on H100s](https://pytorch.org/blog/presenting-flux-fast-making-flux-go-brrr-on-h100s/). [Tweet](https://x.com/PyTorch/status/1937904983254446325) from PyTorch.

### [Carted](https://www.carted.com/blog)

The first four posts were co-authored with [Nilabhra Roy Chowdhury](https://www.linkedin.com/in/nilabhraroychowdhury). 

- [Improving Dataflow Pipelines for Text Data Processing](https://www.carted.com/blog/improving-dataflow-pipelines-for-text-data-processing/)
- Variable-Length Sequences in TensorFlow
  - [Part I](https://www.carted.com/blog/variable-length-sequences-in-tensorflow-part-1/)
  - [Part II](https://www.carted.com/blog/variable-length-sequences-in-tensorflow-part-2/)
  - [Part III](https://www.carted.com/blog/variable-length-sequences-in-tensorflow-part-3/)
- [Building an Efficient Machine Learning API](https://www.carted.com/blog/building-an-efficient-machine-learning-api/)
- [Better Hardware Provisioning for ML Experiments](https://www.carted.com/blog/better-hardware-provisioning-for-ml-experiments)


### Others

-   [Lessons learned from a Deep Learning Hackathon](http://bit.ly/2YfnZhI) 
-   [“Reparameterization” trick in Variational Autoencoders](https://bit.ly/2RjoWnM)
-   [Your First Machine Learning Project: Q and A with Sayak Paul, Google Developer Expert (GDE) in Machine Learning (Ep. 4)](https://blog.phcschoolofai.org/your-first-machine-learning-project-q-and-a-with-sayak-paul-google-developer-expert-gde-in-machine-learning-ep-4-ck91vpv4e02lm7us1swnwvsof)
-   [AMA with Sayak Paul - Hacktoberfest'19](https://fossassam.tech/post/ama-sayak/)
-   [Predicting the publisher’s name from an article: A case study](http://bit.ly/2K9TpS8) [^14]
-   [GDE Journey — Sayak Paul](https://bit.ly/2WVQsLd) 
-   Multi-part tutorial series on **Selfie2Anime with TFLite** (joint work with [Margaret Maynard-Reid](https://twitter.com/margaretmz)) - [Part I](https://bit.ly/selfie2anime-1), [Part II](https://bit.ly/selfie2anime-2), [Part III](https://bit.ly/selfie2anime-3)
-   Multi-part tutorial series on **Create Artistic Effect by Stylizing Image Background** (joint work with [Margaret Maynard-Reid](https://twitter.com/margaretmz) and [George Soloupis](https://www.linkedin.com/in/george-soloupis/)) - [Part I](https://medium.com/google-developer-experts/image-background-stylizer-part-1-project-intro-d68c4547e7e3), [Part II](https://medium.com/google-developer-experts/create-artistic-effect-by-stylizing-image-background-part-2-tensorflow-lite-models-e614af91944d), [Part III](https://farmaker47.medium.com/android-part-of-create-artistic-effect-by-stylizing-an-image-segment-2a646da2d39a) [^15]
-   [Load-testing TensorFlow Serving and FastAPI on GKE](https://medium.com/google-developer-experts/load-testing-tensorflow-serving-and-fastapi-on-gke-411bc14d96b2) (with [Chansung Park](https://github.com/deep-diver)) [^16]
-   [[ML Story] DreamBoothing Your Way into Greatness](https://medium.com/google-developer-experts/ml-story-dreamboothing-your-way-into-greatness-d087608e6119)


[^10]:#TFCommunitySpotlight [awarded](https://twitter.com/TensorFlow/status/1446611368078086144).
[^11]:In collaboration with the [Neural Structured Learning](https://github.com/tensorflow/neural-structured-learning) team at Google.
[^12]:#TFCommunitySpotlight [awarded](https://twitter.com/TensorFlow/status/1469019016782041095).
[^13]:#TFCommunitySpotlight [awarded](https://twitter.com/TensorFlow/status/1626629821022208020).
[^14]:This one won the ML GDE Dev Challenge.
[^15]:#TFCommunitySpotlight [awarded](https://twitter.com/TensorFlow/status/1351590466068783105).
[^16]:#TFCommunitySpotlight [awarded](https://twitter.com/TensorFlow/status/1545115276152389636).
